TODO
----
x Create GitHub repo
x Add README to repo
x Copy library code across from React app and get it building as a library
x Add library code to repo
x Add demo agent implementations
x Re-work React-based demo app as a vanilla JavaScript demo app
x Add demo app
x Add demo container
x Update library code to remove Webpack magic comment in dynamic import() expression
x Update demo app code to add uncomment about exceptions being swallowed by inline script type="module"
x Publish library as an npm package
x Test installing and using published npm package in React-based demo app
x Test installing published npm package on separate machine
x Update library code to reinstate Webpack magic comment in dynamic import() expression
x Update README with instructions on how to run the demo app
x Update README to explain about demo app and recommendation for how to play around with it
x Update README to split Overview into Overview and Background
x Update README to recommend container over app for config source and discovery strategy
x Investigate problem with JS errors being swallowed by inline script type="module" code in demo app - either fix this, or convert demo app to use a framework/bundler which avoids this problem
x Fix issue with apparently no error thrown on non-match of provider during discovery phase (actually this is almost certainly just because of the script type="module" issue above)
x Update README with screenshot of demo app
x Add new section to README - 'Use Case 1: FDC3 App Interop Using Hardcoded Agents'
x Add new section to README - 'Use Case 2: FDC3 App Interop Using Container-Based Discovery'
x Proof-read README and update as necessary
x Update README with diagrams for Use Case 1 and Use Case 2

 Create deploy-to-demo-app Shell script or Node script to copy the built installer library across
 Add additional validation in library's installAgent() method e.g. check that providerDef.providerImplementation is truthy
 Update README with diagram showing how fdc3-installer works e.g. showing the phases and the dependencies
 Update README to better explain the customer1.appvendor.com / customer2.appvendor.com example for the ContainerOrigin / AppOrigin discovery strategies
 Update README - consider adding a new 'Discovery Strategies Considered But Rejected' section
 Update README - add to FAQ - How does provider version matching work in the discovery phase?
 Look at issue with errors being raised as promise rejections - perhaps these should really have be surfaced properly in the calling code even if an async IIFE had not been used?
 Review use of the phrase 'FDC3 Agent' throughout the codebase
 Test library again with InstallerConfigSource.App
 Test library with an app window spawned from the container, to confirm getContainerOrigin() functionality works as expected
 Test creation strategy executors again with passing multiple args to function / constructor / methods

 Consider the issue of dynamic (rather than just static) function / constructor method args
 Add a license to the repo

 [See 'Outstanding Work' section of README for further TODO items]
